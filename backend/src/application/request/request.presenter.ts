import { Request } from 'src/domain/entities/request.entity';
export class RequestPresenter {
  static toHTTP(request: Request) {
    return {
      id: request.id,

      cpf: request.cpf,
      personName: request.personName,
      cnpj: request.cnpj,
      corporateName: request.corporateName,
      protocolId: request.protocolId,

      projectId: request.id_projet_fk,
      economicActivityId: request.id_ativ_econ_fk,
      requestSituationId: request.id_sitc_req_fk,
      buildingTypeId: request.id_tipo_edifi_fk,
      propertyTypeId: request.id_tipo_patrm_fk,
      occupationRiskId: request.id_risc_ocup_fk,
      occupationSubTypeId: request.id_sub_tipo_ocup_fk,
      occupationTypeId: request.id_tipo_ocup_fk,
      userId: request.id_usu_fk,
      personIndicator: request.ic_pess,
      establishmentTitle: request.ds_titul_estab,
      arTypeIndicator: request.ic_tipo_ar,
      validityStartDate: request.dt_ini_valid,
      validityEndDate: request.dt_fim_valid,
      phoneNumber: request.nr_telef,
      cellPhoneNumber: request.nr_celr,
      email: request.ds_email,
      propertyArea: request.nr_area_patrm,
      declaredArea: request.nr_area_decld,
      maxCapacity: request.nr_cap_max_pess,
      paymentFee: request.vl_taxa_pgto,
      floorCount: request.nr_pavm,
      buildingHeight: request.nr_alt_edf,
      hasGnv: request.ic_gnv,
      hasFixedSystem: request.ic_sist_fixo,
      hasExplosiveMaterial: request.ic_mat_expl,
      tpeiExemptionReasonId: request.id_motiv_isent_tpei_fk,
      arObservation: request.ds_obs_ar,
      observations: request.ds_obs,
      statusIndicator: request.ic_stat,
      inclusionDate: request.dt_incl,
      updateDate: request.dt_atlz,
      taxExemptionReasonId: request.id_motiv_isent_tax_fk,
      isCondominium: request.ic_condm,
      isCondominiumEstablished: request.ic_esta_condm,
      addressObservation: request.ds_obs_endr,
      cityOmeId: request.id_cidd_x_ome_fk,
      addressReference: request.ds_refer_endr,
      isGasResale: request.ic_reven_gas,
      isGasStation: request.ic_posto_combs,
      temporaryEventTypeId: request.id_tp_event_temp_fk,
      temporaryEventTypeOther: request.ds_tp_event_temp_outro,
      occupationId: request.id_ocupc_fk,
      stampDate: request.dt_emiss_avbc,
      avcbSituationIndicator: request.ic_sitc_avcb,
      projectProtocolNumber: request.nr_protc_projt,
      gasBottleQuantity: request.nr_qtd_botij,
      eventOpenIndicator: request.ic_event_abert,
      latitude: request.nr_latd,
      longitude: request.nr_long,
      form: request.ic_forma,
      hasPurchaseTerm: request.ic_termo_compr,
      purchaseTermObservation: request.ds_obs_termo,
      purchaseTermValidityDate: request.dt_valid_termo,
      avcbOpinion: request.parecer_avcb,
      condominiumProtocolNumber: request.nr_protc_condm,
    };
  }

  static toHTTPList(requests: Request[]) {
    return requests.map((request) => this.toHTTP(request));
  }
}
