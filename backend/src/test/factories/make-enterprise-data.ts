import { Enterprise } from 'src/domain/entities/enterprise.entity';

export function makeEnterpriseData(data: Partial<Enterprise> = {}): Enterprise {
  return {
    id: data.id ?? 1,
    economicActivityId: data.economicActivityId ?? 101,
    propertyTypeId: data.propertyTypeId ?? 5,
    buildingTypeId: data.buildingTypeId ?? 3,
    enterpriseSituationId: data.enterpriseSituationId ?? 1,
    occupationSubTypeId: data.occupationSubTypeId ?? 2,
    occupationTypeId: data.occupationTypeId ?? 1,
    occupationRiskId: data.occupationRiskId ?? 10,
    userId: data.userId ?? 1001,
    personIndicator: data.personIndicator ?? 'F',
    cpf: data.cpf ?? '12345678901',
    personName: data.personName ?? 'John Doe',
    cnpj: data.cnpj ?? '12345678000199',
    corporateName: data.corporateName ?? 'Example Corp',
    establishmentTitle: data.establishmentTitle ?? 'Main Office',
    arTypeIndicator: data.arTypeIndicator ?? 'A',
    validityStartDate: data.validityStartDate ?? new Date('2023-01-01'),
    validityEndDate: data.validityEndDate ?? new Date('2025-12-31'),
    phoneNumber: data.phoneNumber ?? '123456789',
    cellPhoneNumber: data.cellPhoneNumber ?? '987654321',
    email: data.email ?? 'example@example.com',
    propertyArea: data.propertyArea ?? 500.0,
    declaredArea: data.declaredArea ?? 450.0,
    maxCapacity: data.maxCapacity ?? 100,
    paymentFee: data.paymentFee ?? 150.75,
    floorCount: data.floorCount ?? 3,
    buildingHeight: data.buildingHeight ?? 15.0,
    hasGnv: data.hasGnv ?? 'N',
    hasFixedSystem: data.hasFixedSystem ?? 'Y',
    hasExplosiveMaterial: data.hasExplosiveMaterial ?? 'N',
    tpeiExemptionReasonId: data.tpeiExemptionReasonId ?? undefined,
    observations: data.observations ?? 'No observations',
    statusIndicator: data.statusIndicator ?? 'A',
    inclusionDate: data.inclusionDate ?? new Date(),
    updateDate: data.updateDate ?? new Date(),
    protocolId: data.protocolId ?? 2001,
    taxExemptionReasonId: data.taxExemptionReasonId ?? undefined,
    isCondominium: data.isCondominium ?? 'N',
    isCondominiumEstablished: data.isCondominiumEstablished ?? 'N',
    addressObservation: data.addressObservation ?? 'Near the main road',
    cityOmeId: data.cityOmeId ?? 101,
    addressReference: data.addressReference ?? 'Opposite the park',
    isGasResale: data.isGasResale ?? 'N',
    isGasStation: data.isGasStation ?? 'N',
    temporaryEventTypeId: data.temporaryEventTypeId ?? undefined,
    temporaryEventTypeOther: data.temporaryEventTypeOther ?? undefined,
    occupationId: data.occupationId ?? 301,
    stampDate: data.stampDate ?? new Date(),
    gasBottleQuantity: data.gasBottleQuantity ?? 0,
    nature: data.nature ?? 'R',
    form: data.form ?? 'A',
  };
}
